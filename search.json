[{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://funecology.github.io/fundiversity/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <https://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <https://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Matthias Grenié & Hugo Gruson  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. fundiversity Copyright (C) 2020 Matthias Grenié & Hugo Gruson This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"required-data","dir":"Articles","previous_headings":"","what":"Required data","title":"1. Overview of how to use fundiversity","text":"compute functional diversity indices, need least dataset describing species traits, .e. species characteristics. Note talk species reasoning apply whatever unit ’re interested whether ’s individual organisms, ecological plots, even entire ecosystems. traits features describe units. fundiversity comes one example trait dataset. dataset comes Nowak et al. (2019b) describe traits birds plants along tropical gradient (Nowak et al. 2019a). can see datasets available fundiversity using data() function: load use names data() function: Note datasets species shown rows, species names row names, traits columns. Functional diversity indices generally computed different locations hereafter call sites. thus need description species site form site-species matrix. , ’re calling site-species matrix granularity “species” “site” units can vary depending want compute functional diversity . fundiversity contains corresponding site-species matrices -mentioned trait dataset (Nowak et al. 2019a): site species matrix represent presence given species (column) given site (row), similar format used vegan package. site-species matrix contains 0 (absence) 1 (presence), fundiversity can also use matrices contain abundances functional diversity indices (FDiv Q). ensure good computation functional diversity indices, least species names (row names) trait data need column names site species matrix:","code":"data(package = \"fundiversity\") data(\"traits_birds\", package = \"fundiversity\")  head(traits_birds) #>                      Bill.width..mm. Bill.length..mm. Kipp.s.index Bodymass..g. #> Aburria_aburri                 18.35            35.48         0.18       1407.5 #> Amazona_farinosa               26.50            38.81         0.29        626.0 #> Amazona_mercenaria             17.51            26.30         0.33        340.0 #> Amazona_ochrocephala           20.17            31.40         0.26        440.0 #> Ampelioides_tschudii           16.53            24.58         0.24         78.4 #> Ampelion_rufaxilla             16.97            21.89         0.28         73.9  data(\"traits_plants\", package = \"fundiversity\")  head(traits_plants) #>                        Fruit.length..mm. Fruit.width..mm. Plant.height..m. #> Abuta_grandifolia                  17.48             9.38             6.00 #> Alchornea_latifolia                 6.82             8.23            11.53 #> Alchornea_triplinervia              8.18            10.26            14.72 #> Allophylus_punctatus               13.58            12.49             4.40 #> Alnus_acuminata                    19.32            11.48            17.54 #> Aniba_guianensis                   15.65            13.43             8.00 #>                        Crop.mass..g. #> Abuta_grandifolia             341.25 #> Alchornea_latifolia          1290.48 #> Alchornea_triplinervia       1156.67 #> Allophylus_punctatus           33.34 #> Alnus_acuminata              5009.33 #> Aniba_guianensis               25.50 # Site-species matrix for birds data(\"site_sp_birds\", package = \"fundiversity\")  head(site_sp_birds)[, 1:5] #>           Aburria_aburri Amazona_farinosa Amazona_mercenaria #> elev_250               0                1                  0 #> elev_500               0                1                  0 #> elev_1000              1                1                  1 #> elev_1500              1                0                  1 #> elev_2000              0                0                  1 #> elev_2500              0                0                  1 #>           Amazona_ochrocephala Ampelioides_tschudii #> elev_250                     1                    0 #> elev_500                     1                    0 #> elev_1000                    0                    1 #> elev_1500                    0                    0 #> elev_2000                    0                    0 #> elev_2500                    0                    0  # Site-species matrix for plants data(\"site_sp_plants\", package = \"fundiversity\")  head(site_sp_plants)[, 1:5] #>           Abuta_grandifolia Alchornea_latifolia Alchornea_triplinervia #> elev_250                  1                   1                      1 #> elev_500                  1                   1                      1 #> elev_1000                 0                   0                      1 #> elev_1500                 0                   0                      1 #> elev_2000                 0                   0                      1 #> elev_2500                 0                   0                      1 #>           Allophylus_punctatus Alnus_acuminata #> elev_250                     1               1 #> elev_500                     1               1 #> elev_1000                    1               1 #> elev_1500                    1               1 #> elev_2000                    1               1 #> elev_2500                    1               1 # Fewer species in trait dataset than species in the site-species matrix fd_fric(traits_birds[2:217,], site_sp_birds) #> Differing number of species between trait dataset and site-species matrix #> Taking subset of species #>        site       FRic #> 1  elev_250 171543.730 #> 2  elev_500 185612.548 #> 3 elev_1000 109615.330 #> 4 elev_1500  63992.817 #> 5 elev_2000  20065.764 #> 6 elev_2500  18301.176 #> 7 elev_3000  17530.651 #> 8 elev_3500   3708.735  # Fewer species in the site-species matrix than in the traits fd_fric(traits_birds, site_sp_birds[, 1:60]) #> Differing number of species between trait dataset and site-species matrix #> Taking subset of species #>        site        FRic #> 1  elev_250 18963.31311 #> 2  elev_500 18963.31311 #> 3 elev_1000 38586.75398 #> 4 elev_1500 38114.26828 #> 5 elev_2000  5888.93690 #> 6 elev_2500  5256.70628 #> 7 elev_3000  2710.81803 #> 8 elev_3500    88.11684  # No species in common between both dataset fd_fric(traits_birds[1:5,], site_sp_birds[, 6:10]) #> Error: No species in common found between trait dataset and site-species matrix"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"functional-richness-fric---fd_fric","dir":"Articles","previous_headings":"","what":"Functional Richness (FRic) - fd_fric()","title":"1. Overview of how to use fundiversity","text":"Functional Richness (FRic) represents total amount functional space filed community dataset (Villéger, Mason, Mouillot 2008). can compute FRic fundiversity using fd_fric() function. single trait range FRic range trait observed dataset: first column site describes site FRic computed FRic column contains computed FRic values. site-species matrix provided site named default s1. multiple traits, FRic can thought multi-dimensional range computed convex hull volume considered species (Villéger, Mason, Mouillot 2008): provide trait dataset without specifying site-species matrix fd_fric() computes FRic full trait dataset. can compute FRic values different sites providing trait dataset site-species matrix fd_fric(): convex hull volume depends number units traits used, difficult compare across datasets, suggested standardize value total volume comprising species dataset (Villéger, Mason, Mouillot 2008): newly computed FRic values comprised 0 1. especially useful comparing different sites: row gives standardized FRic values site. Parallelization. computation function can parallelized thanks future package. Refer parallelization vignette get information . Memoization. default, loading fundiversity, functions compute convex hulls memoised memoise package installed (results cached avoid recomputing functional volume twice). means repeated call fd_fric() arguments won’t recomputed recovered cache. deactivate behavior can set option fundiversity.memoise FALSE running following line: options(fundiversity.memoise = FALSE). changing option, behavior automatically change next time run function. Add script(s) .Rprofile file avoid toggling time. changing option, behavior automatically change next time run function. Important note: memoisation available memoise package installed without parallelization, otherwise fundiversity use unmemoised versions functions.","code":"# Range of bill width in the birds dataset diff(range(traits_birds[, \"Bill.width..mm.\"])) #> [1] 33.64  # Using fundiversity::fd_fric() fd_fric(traits_birds) #>   site     FRic #> 1   s1 230967.7 fd_fric(traits_birds) #>   site     FRic #> 1   s1 230967.7 fd_fric(traits_birds, site_sp_birds) #>        site       FRic #> 1  elev_250 171543.730 #> 2  elev_500 185612.548 #> 3 elev_1000 112600.176 #> 4 elev_1500  66142.748 #> 5 elev_2000  20065.764 #> 6 elev_2500  18301.176 #> 7 elev_3000  17530.651 #> 8 elev_3500   3708.735 fd_fric(traits_birds, stand = TRUE) #>   site FRic #> 1   s1    1 fd_fric(traits_birds, site_sp_birds, stand = TRUE) #>        site       FRic #> 1  elev_250 0.74271733 #> 2  elev_500 0.80362981 #> 3 elev_1000 0.48751477 #> 4 elev_1500 0.28637225 #> 5 elev_2000 0.08687692 #> 6 elev_2500 0.07923694 #> 7 elev_3000 0.07590087 #> 8 elev_3500 0.01605737"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"functional-volume-intersect-fric_intersect---fd_fric_intersect","dir":"Articles","previous_headings":"","what":"Functional volume intersect (FRic_intersect) - fd_fric_intersect()","title":"1. Overview of how to use fundiversity","text":"Sometimes ’re interested shared functional volumes pairs sites functional volumes site separately. fundiversity provides fd_fric_intersect() function exact use case. follows interface fd_fric() similar named arguments: fd_fric_intersect() computes shared functional volumes pair sites, including self-intersection correspond functional volume site. Similarly fd_fric() site-species data provided, fd_fric_intersect() considers site contains species trait dataset. output data.frame two first columns (first_site second_site) define sites intersection computed, third column (FRic_intersect) contains volume intersection. Similarly fd_fric() intersections volumes can standardized: Note standardizing volumes, behavior similar fd_fric() means function considers total volume occupied provided trait values, even absent sites, can lead standardized self-intersection volumes lower one. Parallelization. computation function can parallelized thanks future package. Refer parallelization vignette get information . Memoization. default, loading fundiversity, functions compute convex hulls memoised memoise package installed. means repeated calls fd_fric_intersect() similar arguments won’t recomputed time recovered memory. deactivate behavior can set option fundiversity.memoise FALSE running following line: options(fundiversity.memoise = FALSE). changing option, behavior automatically change next time run function. Add script(s) .Rprofile file avoid toggling time. Important note: memoisation available memoise package installed without parallelization, otherwise fundiversity use unmemoised versions functions.","code":"fd_fric_intersect(traits_birds) #>   first_site second_site FRic_intersect #> 1         s1          s1       230967.7 fd_fric_intersect(traits_birds, site_sp_birds[1:2,]) #>   first_site second_site FRic_intersect #> 1   elev_250    elev_500       171532.6 #> 2   elev_250    elev_250       171543.7 #> 3   elev_500    elev_500       185612.5 fd_fric_intersect(traits_birds, site_sp_birds[1:2,], stand = TRUE) #>   first_site second_site FRic_intersect #> 1   elev_250    elev_500      0.7426689 #> 2   elev_250    elev_250      0.7427173 #> 3   elev_500    elev_500      0.8036298"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"functional-divergence-fdiv---fd_fdiv","dir":"Articles","previous_headings":"","what":"Functional Divergence (FDiv) - fd_fdiv()","title":"1. Overview of how to use fundiversity","text":"Functional Divergence (FDiv) represents abundance spread along different traits (Villéger, Mason, Mouillot 2008). species extreme trait values highest abundance, functional divergence high. Use fd_fdiv() function compute functional divergence: site-species matrix provided, FDiv computed default considering species together. provide site-species matrix, FDiv computed across sites: Similarly FRic, included species differ site-species matrix trait dataset, fd_fdiv() take common subset species. computation function can parallelized thanks future package. Refer parallelization vignette get information .","code":"# One-dimension FDiv fd_fdiv(traits_birds[, 1, drop = FALSE]) #>   site      FDiv #> 1   s1 0.7490732  # Multiple dimension FDiv fd_fdiv(traits_birds) #>   site      FDiv #> 1   s1 0.7282172 fd_fdiv(traits_birds, site_sp_birds) #>        site      FDiv #> 1  elev_250 0.6847251 #> 2  elev_500 0.6937866 #> 3 elev_1000 0.7056772 #> 4 elev_1500 0.7269801 #> 5 elev_2000 0.7509511 #> 6 elev_2500 0.6985280 #> 7 elev_3000 0.6627204 #> 8 elev_3500 0.6422068"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"functional-evenness-feve---fd_feve","dir":"Articles","previous_headings":"","what":"Functional Evenness (FEve) - fd_feve()","title":"1. Overview of how to use fundiversity","text":"Functional Evenness (FEve) describes regularity distribution species (abundances) trait space (Villéger, Mason, Mouillot 2008). FEve bounded 0 1. FEve close 0 species (abundances) tightly packed portion trait space close 1 species regularly spread (even abundances) along trait space. Use fd_fdiv() function compute functional divergence: site-species matrix provided, FEve computed default considering species together. provide site-species matrix, FEve computed across sites: Similarly FRic, included species differ site-species matrix trait dataset, fd_feve() take common subset species. computation function can parallelized thanks future package. Refer parallelization vignette get information . Memoization. default, loading fundiversity, functions compute convex hulls memoised memoise package installed (results cached avoid recomputing functional volume twice). means repeated call fd_fdiv() arguments won’t recomputed recovered cache. deactivate behavior can set option fundiversity.memoise FALSE running following line: options(fundiversity.memoise = FALSE). changing option, behavior automatically change next time run function. Add script(s) .Rprofile file avoid toggling time. changing option, behavior automatically change next time run function. Important note: memoisation available memoise package installed without parallelization, otherwise fundiversity use unmemoised versions functions.","code":"# One-dimension FEve fd_feve(traits_birds[, 1, drop = FALSE]) #>   site      FEve #> 1   s1 0.4454885  # Multiple dimension FEve fd_feve(traits_birds) #>   site      FEve #> 1   s1 0.3743341 fd_feve(traits_birds, site_sp_birds) #>        site      FEve #> 1  elev_250 0.3841202 #> 2  elev_500 0.3846186 #> 3 elev_1000 0.3426688 #> 4 elev_1500 0.2965585 #> 5 elev_2000 0.3523994 #> 6 elev_2500 0.3552671 #> 7 elev_3000 0.3492529 #> 8 elev_3500 0.4222442"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"functional-dispersion-fdis---fd_fdis","dir":"Articles","previous_headings":"","what":"Functional Dispersion (FDis) - fd_fdis()","title":"1. Overview of how to use fundiversity","text":"Functional Dispersion reflects changes abundance-weighted deviation species trait values center functional space. can compute Functional Dispersion (FDis) using fd_fdis() function providing trait dataset: don’t provide site-species matrix, fd_fdis() considers species provided trait dataset present equal abundances site. can also provide site-species matrix compute FDis different sites: computation function can parallelized thanks future package. Refer parallelization vignette get information .","code":"fd_fdis(traits_birds) #>   site     FDis #> 1   s1 133.3902 fd_fdis(traits_birds, site_sp_birds) #>        site      FDis #> 1  elev_250 151.38851 #> 2  elev_500 153.79982 #> 3 elev_1000 161.57816 #> 4 elev_1500 144.30915 #> 5 elev_2000  76.69386 #> 6 elev_2500  78.44577 #> 7 elev_3000  88.25201 #> 8 elev_3500  68.29563"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"raos-quadratic-entropy-q---fd_raoq","dir":"Articles","previous_headings":"","what":"Rao’s Quadratic Entropy (Q) - fd_raoq()","title":"1. Overview of how to use fundiversity","text":"Rao’s Quadratic entropy assesses multi-dimensional divergence trait space (Rao 1982). abundance-weighted variance trait dissimilarities species pairs. can compute Rao’s Quadratic entropy (Q) using fd_raoq() function providing trait dataset: don’t provide site-species matrix, fd_raoq() considers species provided trait dataset present equal abundances site. can also provide site-species matrix compute Q different sites: computation Rao’s quadratic entropy requires dissimilarities pair species dataset, provide trait dataset fd_raoq(), function compute Euclidean distance pairs species. wish directly provide species dissimilarities, can dist_matrix argument: NB: want provide site-species matrix trait dissimilarity matrix please specify explicitly arguments names.","code":"fd_raoq(traits_birds) #>   site        Q #> 1   s1 170.0519 fd_raoq(traits_birds, site_sp_birds) #>        site         Q #> 1  elev_250 194.78095 #> 2  elev_500 197.08184 #> 3 elev_1000 200.52231 #> 4 elev_1500 178.24801 #> 5 elev_2000  97.32416 #> 6 elev_2500 102.22461 #> 7 elev_3000 113.22049 #> 8 elev_3500  87.04750 # Compute dissimilarity between species with the Manhattan distance trait_dissim <- dist(traits_birds, method = \"manhattan\")  fd_raoq(dist_matrix = trait_dissim) #>   site       Q #> 1   s1 190.589  fd_raoq(sp_com = site_sp_birds, dist_matrix = as.matrix(trait_dissim)) #>        site        Q #> 1  elev_250 218.3636 #> 2  elev_500 220.8257 #> 3 elev_1000 220.0048 #> 4 elev_1500 196.6785 #> 5 elev_2000 112.6211 #> 6 elev_2500 117.6497 #> 7 elev_3000 127.5911 #> 8 elev_3500 104.8981"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"large-site-species-data-sparse-matrices","dir":"Articles","previous_headings":"","what":"Large site-species data / sparse matrices","title":"1. Overview of how to use fundiversity","text":"Sparse matrices memory efficient ways storing matrix object contains many zeros. fundiversity fully compatible sparse matrices Matrix package. can used encode site-species information distance matrices. Provide Matrix objects inputs indices function fundiversity, transparently use efficient computation.","code":"# Convert site-species matrix to sparse matrix sparse_site_sp <- Matrix::Matrix(site_sp_birds, sparse = TRUE)  fd_raoq(traits_birds, site_sp_birds) #>        site         Q #> 1  elev_250 194.78095 #> 2  elev_500 197.08184 #> 3 elev_1000 200.52231 #> 4 elev_1500 178.24801 #> 5 elev_2000  97.32416 #> 6 elev_2500 102.22461 #> 7 elev_3000 113.22049 #> 8 elev_3500  87.04750"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"standardizing-trait-data","dir":"Articles","previous_headings":"","what":"Standardizing trait data","title":"1. Overview of how to use fundiversity","text":"fundiversity perform transformation input trait dissimilarity data. fd_raoq() provide continuous trait data function attempt computing Euclidean distance species. order get comparable functional diversity indices can standardize trait data. One option consider scale() function scale continuous trait mean zero standard deviation one (z-score). trait importance computing functional diversity indices: Another solution make trait comparable scale 0 1 scaling trait maximum minimum values: several options available standardize trait values, reviewed Leps et al. (2006). traits use continuous, refer next section, suggests ways computing functional diversity indices non-continuous traits.","code":"traits_birds_sc <- scale(traits_birds) summary(traits_birds_sc) #>  Bill.width..mm.   Bill.length..mm.    Kipp.s.index      Bodymass..g.      #>  Min.   :-1.1854   Min.   :-0.78608   Min.   :-1.8545   Min.   :-0.49301   #>  1st Qu.:-0.7330   1st Qu.:-0.52857   1st Qu.:-0.7432   1st Qu.:-0.44701   #>  Median :-0.2974   Median :-0.28257   Median :-0.2492   Median :-0.34440   #>  Mean   : 0.0000   Mean   : 0.00000   Mean   : 0.0000   Mean   : 0.00000   #>  3rd Qu.: 0.4157   3rd Qu.: 0.09482   3rd Qu.: 0.3682   3rd Qu.:-0.03999   #>  Max.   : 3.9738   Max.   : 7.20531   Max.   : 3.3317   Max.   : 5.79396  # Unscaled fd_fric(traits_birds) #>   site     FRic #> 1   s1 230967.7  # Scaled fd_fric(traits_birds_sc) #>   site    FRic #> 1   s1 88.9286 min_values <- as.numeric(lapply(as.data.frame(traits_birds), min)) max_values <- as.numeric(lapply(as.data.frame(traits_birds), max))  traits_birds_minmax <- apply(traits_birds, 1, function(x) {   (x - min_values)/(max_values - min_values) }) traits_birds_minmax <- t(traits_birds_minmax) summary(traits_birds_minmax) #>  Bill.width..mm.   Bill.length..mm.   Kipp.s.index     Bodymass..g.      #>  Min.   :0.00000   Min.   :0.00000   Min.   :0.0000   Min.   :0.000000   #>  1st Qu.:0.08769   1st Qu.:0.03222   1st Qu.:0.2143   1st Qu.:0.007317   #>  Median :0.17212   Median :0.06301   Median :0.3095   Median :0.023637   #>  Mean   :0.22977   Mean   :0.09837   Mean   :0.3576   Mean   :0.078418   #>  3rd Qu.:0.31034   3rd Qu.:0.11023   3rd Qu.:0.4286   3rd Qu.:0.072057   #>  Max.   :1.00000   Max.   :1.00000   Max.   :1.0000   Max.   :1.000000"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"non-continuous-traits","dir":"Articles","previous_headings":"","what":"Non-continuous traits?","title":"1. Overview of how to use fundiversity","text":"panic. can still compute -mentioned functional diversity indices. However, indices need continuous descriptors considered species, need transform non-continuous trait data continuous form. general idea obtain trait table table quantitative descriptions defining specific dissimilarity projecting species dissimilarities onto quantitative space using Principal Coordinates Analysis (PCoA). framework fully described Maire et al. (2015). compute dissimilarity non-continuous traits can user Gower’s distance (Gower 1971) following adaptations (Pavoine et al. 2009; Podani 1999). can use following functions: cluster::daisy(), FD::gowdis(), ade4::dist.ktab(), vegan::vegdist(). can project dissimilarities Principal Coordinates using ape::pcoa() example. can select first dimensions explains variance use theses input “traits” compute functional diversity indices.","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity.html","id":"missing-values-in-traits","dir":"Articles","previous_headings":"","what":"Missing values in traits?","title":"1. Overview of how to use fundiversity","text":"Sometimes, trait values can missing species dataset. fundiversity want make assumptions without telling , default drops species data trait missing. want use data missing values can use dissimilarity metrics accept missing trait values methods specified vegan::vegdist(). Another solution, impute missing trait value fill . Many imputation methods exists trait imputation scope fundiversity can find details proceed review Penone et al. (2014).","code":""},{"path":[]},{"path":[]},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_1-parallel.html","id":"running-code-in-parallel","dir":"Articles","previous_headings":"","what":"Running code in parallel","title":"2. Parallelize Computation of Indices","text":"default fundiversity code run sequentially single core. trigger parallelization user needs define future::plan() object parallel backend future::multisession split execution across multiple R sessions. Within future::multisession backend can specify number cores function parallelized argument workers, can change future::plan() call: learn different backends available related arguments needed, please refer documentation future::plan() overview vignette future.","code":"# Sequential execution fric1 <- fd_fric(traits_birds)  # Parallel execution future::plan(future::multisession)  # Plan definition fric2 <- fd_fric(traits_birds)  # The code resolve in similar fashion  identical(fric1, fric2) #> [1] TRUE future::plan(future::multisession, workers = 2)  # Only 2 cores are used fric3 <- fd_fric(traits_birds)  identical(fric3, fric2) #> [1] TRUE"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_1-parallel.html","id":"performance-comparison","dir":"Articles","previous_headings":"","what":"Performance comparison","title":"2. Parallelize Computation of Indices","text":"can now compare difference performance see performance gain thanks parallelization: non parallelized code runs faster parallelized one! Indeed, parallelization fundiversity parallelize computation across different sites. parallelization used many sites want compute similar indices. example dataset 5000 times bigger:","code":"future::plan(future::sequential) non_parallel_bench <- microbenchmark::microbenchmark(   non_parallel = {     fd_fric(traits_birds)   },   times = 20 )  future::plan(future::multisession) parallel_bench <- microbenchmark::microbenchmark(   parallel = {     fd_fric(traits_birds)   },   times = 20 )  rbind(non_parallel_bench, parallel_bench) #> Unit: milliseconds #>          expr      min       lq      mean    median       uq      max neval cld #>  non_parallel   8.9509   9.2691  14.93812  13.32405  18.4841   33.153    20  a  #>      parallel 224.7037 248.9997 345.59427 274.59615 304.6889 1660.164    20   b # Function to make a bigger site-sp dataset make_more_sites <- function(n) {   site_sp <- do.call(rbind, replicate(n, site_sp_birds, simplify = FALSE))   rownames(site_sp) <- paste0(\"s\", seq_len(nrow(site_sp)))    site_sp } bigger_site <- make_more_sites(5000)  microbenchmark::microbenchmark(   seq = {      future::plan(future::sequential)      fd_fric(traits_birds, bigger_site)    },   multisession = {      future::plan(future::multisession, workers = 4)     fd_fric(traits_birds, bigger_site)    },   multicore = {      future::plan(future::multicore, workers = 4)      fd_fric(traits_birds, bigger_site)    }, times = 20 ) #> Unit: seconds #>          expr      min        lq      mean    median        uq       max neval cld #>           seq 78.13766 195.17853 184.92560 196.89360 197.90500 200.56116    20  a  #>  multisession 34.23402  54.44036  53.39172  54.88206  55.19359  61.83829    20   b #>     multicore 75.43857 192.45136 183.07222 196.48277 201.16889 209.39847    20  a #>  seconds needed to generate this document: 8443.78 sec elapsed #> ─ Session info ────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16 ucrt) #>  os       Windows 11 x64 (build 22631) #>  system   x86_64, mingw32 #>  ui       RStudio #>  language (EN) #>  collate  French_France.utf8 #>  ctype    fr_FR.UTF-8 #>  tz       Europe/Paris #>  date     2024-03-26 #>  rstudio  2023.12.1+402 Ocean Storm (desktop) #>  pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown) #>  #> ─ Packages ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  ! package        * version    date (UTC) lib source #>    abind            1.4-5      2016-07-21 [1] CRAN (R 4.3.0) #>    cachem           1.0.8      2023-05-01 [1] CRAN (R 4.3.1) #>    cli              3.6.2      2023-12-11 [1] CRAN (R 4.3.2) #>    cluster          2.1.6      2023-12-01 [1] CRAN (R 4.3.2) #>    codetools        0.2-19     2023-02-01 [2] CRAN (R 4.3.1) #>    commonmark       1.9.1      2024-01-30 [1] CRAN (R 4.3.2) #>    crayon           1.5.2      2022-09-29 [1] CRAN (R 4.3.1) #>    curl             5.2.1      2024-03-01 [1] CRAN (R 4.3.3) #>    desc             1.4.3      2023-12-10 [1] CRAN (R 4.3.2) #>    devtools         2.4.5      2022-10-11 [1] CRAN (R 4.3.2) #>    digest           0.6.35     2024-03-11 [1] CRAN (R 4.3.3) #>    ellipsis         0.3.2      2021-04-29 [1] CRAN (R 4.3.1) #>    evaluate         0.23       2023-11-01 [1] CRAN (R 4.3.2) #>    fansi            1.0.6      2023-12-08 [1] CRAN (R 4.3.2) #>    fastmap          1.1.1      2023-02-24 [1] CRAN (R 4.3.1) #>    fs               1.6.3      2023-07-20 [1] CRAN (R 4.3.1) #>  P fundiversity   * 1.1.1      2024-01-03 [?] Github (funecology/fundiversity@d11d749) #>    future           1.33.1     2023-12-22 [1] CRAN (R 4.3.2) #>    future.apply     1.11.1     2023-12-21 [1] CRAN (R 4.3.2) #>    geometry         0.4.7      2023-02-03 [1] CRAN (R 4.3.1) #>    gh               1.4.0      2023-02-22 [1] CRAN (R 4.3.1) #>    gitcreds         0.1.2      2022-09-08 [1] CRAN (R 4.3.1) #>    globals          0.16.3     2024-03-08 [1] CRAN (R 4.3.3) #>    glue             1.7.0      2024-01-09 [1] CRAN (R 4.3.2) #>    htmltools        0.5.7      2023-11-03 [1] CRAN (R 4.3.2) #>    htmlwidgets      1.6.4      2023-12-06 [1] CRAN (R 4.3.2) #>    httpuv           1.6.14     2024-01-26 [1] CRAN (R 4.3.2) #>    httr2            1.0.0      2023-11-14 [1] CRAN (R 4.3.2) #>    jsonlite         1.8.8      2023-12-04 [1] CRAN (R 4.3.2) #>    knitr            1.45       2023-10-30 [1] CRAN (R 4.3.2) #>    later            1.3.2      2023-12-06 [1] CRAN (R 4.3.2) #>    lattice          0.22-5     2023-10-24 [1] CRAN (R 4.3.2) #>    lifecycle        1.0.4      2023-11-07 [1] CRAN (R 4.3.2) #>    listenv          0.9.1      2024-01-29 [1] CRAN (R 4.3.2) #>    magic            1.6-1      2022-11-16 [1] CRAN (R 4.3.0) #>    magrittr         2.0.3      2022-03-30 [1] CRAN (R 4.3.1) #>    MASS             7.3-60.0.1 2024-01-13 [1] CRAN (R 4.3.2) #>    Matrix           1.6-5      2024-01-11 [1] CRAN (R 4.3.1) #>    memoise          2.0.1      2021-11-26 [1] CRAN (R 4.3.1) #>    mgcv             1.9-1      2023-12-21 [1] CRAN (R 4.3.2) #>    microbenchmark   1.4.10     2023-04-28 [1] CRAN (R 4.3.3) #>    mime             0.12       2021-09-28 [1] CRAN (R 4.3.0) #>    miniUI           0.1.1.1    2018-05-18 [1] CRAN (R 4.3.2) #>    multcomp         1.4-25     2023-06-20 [1] CRAN (R 4.3.1) #>    mvtnorm          1.2-4      2023-11-27 [1] CRAN (R 4.3.2) #>    nlme             3.1-164    2023-11-27 [1] CRAN (R 4.3.2) #>    parallelly       1.37.1     2024-02-29 [1] CRAN (R 4.3.3) #>    permute          0.9-7      2022-01-27 [1] CRAN (R 4.3.1) #>    pillar           1.9.0      2023-03-22 [1] CRAN (R 4.3.1) #>    pkgbuild         1.4.4      2024-03-17 [1] CRAN (R 4.3.3) #>    pkgconfig        2.0.3      2019-09-22 [1] CRAN (R 4.3.1) #>    pkgload          1.3.4      2024-01-16 [1] CRAN (R 4.3.2) #>    profvis          0.3.8      2023-05-02 [1] CRAN (R 4.3.2) #>    promises         1.2.1      2023-08-10 [1] CRAN (R 4.3.1) #>    purrr            1.0.2      2023-08-10 [1] CRAN (R 4.3.1) #>    R6               2.5.1      2021-08-19 [1] CRAN (R 4.3.1) #>    rappdirs         0.3.3      2021-01-31 [1] CRAN (R 4.3.1) #>    Rcpp             1.0.12     2024-01-09 [1] CRAN (R 4.3.2) #>    remotes          2.5.0      2024-03-17 [1] CRAN (R 4.3.3) #>    rlang            1.1.3      2024-01-10 [1] CRAN (R 4.3.2) #>    rmarkdown        2.26       2024-03-05 [1] CRAN (R 4.3.3) #>    roxygen2         7.3.1      2024-01-22 [1] CRAN (R 4.3.2) #>    rprojroot        2.0.4      2023-11-05 [1] CRAN (R 4.3.2) #>    rstudioapi       0.15.0     2023-07-07 [1] CRAN (R 4.3.1) #>    sandwich         3.1-0      2023-12-11 [1] CRAN (R 4.3.2) #>    sessioninfo      1.2.2      2021-12-06 [1] CRAN (R 4.3.1) #>    shiny            1.8.0      2023-11-17 [1] CRAN (R 4.3.2) #>    stringi          1.8.3      2023-12-11 [1] CRAN (R 4.3.2) #>    stringr          1.5.1      2023-11-14 [1] CRAN (R 4.3.2) #>    survival         3.5-8      2024-02-14 [1] CRAN (R 4.3.3) #>    TH.data          1.1-2      2023-04-17 [1] CRAN (R 4.3.1) #>    tibble           3.2.1      2023-03-20 [1] CRAN (R 4.3.1) #>    tictoc           1.2.1      2024-03-18 [1] CRAN (R 4.3.3) #>    urlchecker       1.0.1      2021-11-30 [1] CRAN (R 4.3.2) #>    usethis          2.2.3      2024-02-19 [1] CRAN (R 4.3.3) #>    utf8             1.2.4      2023-10-22 [1] CRAN (R 4.3.2) #>    vctrs            0.6.5      2023-12-01 [1] CRAN (R 4.3.2) #>    vegan            2.6-4      2022-10-11 [1] CRAN (R 4.3.1) #>    withr            3.0.0      2024-01-16 [1] CRAN (R 4.3.2) #>    xfun             0.42       2024-02-08 [1] CRAN (R 4.3.3) #>    xml2             1.3.6      2023-12-04 [1] CRAN (R 4.3.2) #>    xtable           1.8-4      2019-04-21 [1] CRAN (R 4.3.1) #>    yaml             2.3.8      2023-12-11 [1] CRAN (R 4.3.2) #>    zoo              1.8-12     2023-04-13 [1] CRAN (R 4.3.1) #>  #>  [1] C:/Users/greniem/AppData/Local/R/win-library/4.3 #>  [2] C:/Program Files/R/R-4.3.1/library #>  #>  P ── Loaded and on-disk path mismatch. #>  #> ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"main-functions","dir":"Articles","previous_headings":"Other packages to compute FD indices","what":"Main functions","title":"3. Performance Benchmark with other packages","text":"table summarizes comparable functions (arguments) functions included fundiversity. Note package name indicated :: followed function name. packages thus: adiv (Pavoine 2020), BAT (Cardoso, Rigal, Carvalho 2015), betapart (Baselga Orme 2012), FD (Laliberté, Legendre, Shipley 2014), hillR (Li 2018), mFD (Magneville et al. 2022). fairness comparison, even FD::dbFD() contains indices ’re considering computes indices together call, necessarily slower.","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"benchmark-between-packages","dir":"Articles","previous_headings":"Other packages to compute FD indices","what":"Benchmark between packages","title":"3. Performance Benchmark with other packages","text":"now benchmark functions included fundiversity corresponding function packages using microbenchmark::microbenchmark() function. use fairly small (~220 species, 8 sites, 4 traits) provided dataset fundiversity.","code":"tictoc::tic()  # Time execution of vignette library(fundiversity) data(\"traits_birds\", package = \"fundiversity\") data(\"site_sp_birds\", package = \"fundiversity\")  dist_traits_birds <- dist(traits_birds)"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-dispersion-fdis","dir":"Articles","previous_headings":"Other packages to compute FD indices > Benchmark between packages","what":"Functional Dispersion (FDis)","title":"3. Performance Benchmark with other packages","text":"","code":"fdis_bench <- microbenchmark::microbenchmark(   fundiversity = {     fundiversity::fd_fdis(traits_birds, site_sp_birds)   },   FD = {     FD::fdisp(dist_traits_birds, site_sp_birds)   },   mFD = {     mFD::alpha.fd.multidim(     traits_birds, site_sp_birds, ind_vect = \"fdis\",     scaling = FALSE, verbose = FALSE, details_returned = FALSE   )   },   times = 30 )  ggplot2::autoplot(fdis_bench) +   labs(title = \"Functional Dispersion (FDis)\")"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-divergence-fdiv","dir":"Articles","previous_headings":"Other packages to compute FD indices > Benchmark between packages","what":"Functional Divergence (FDiv)","title":"3. Performance Benchmark with other packages","text":"","code":"fdiv_bench <- microbenchmark::microbenchmark(   fundiversity = fd_fdiv(traits_birds, site_sp_birds),   mFD = mFD::alpha.fd.multidim(     traits_birds, site_sp_birds, ind_vect = \"fdiv\",     scaling = FALSE, verbose = FALSE   ),   times = 30 )  ggplot2::autoplot(fdiv_bench) +   labs(title = \"Functional Divergence (FDiv)\")"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-evenness-feve","dir":"Articles","previous_headings":"Other packages to compute FD indices > Benchmark between packages","what":"Functional Evenness (FEve)","title":"3. Performance Benchmark with other packages","text":"","code":"feve_bench <- microbenchmark::microbenchmark(   fundiversity = fd_feve(traits_birds, site_sp_birds),   mFD = mFD::alpha.fd.multidim(     traits_birds, site_sp_birds, ind_vect = \"feve\",     scaling = FALSE, verbose = FALSE   ),   times = 30 )  ggplot2::autoplot(feve_bench) +   labs(title = \"Functional Evenness (FEve)\")"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-richness-fric","dir":"Articles","previous_headings":"Other packages to compute FD indices > Benchmark between packages","what":"Functional Richness (FRic)","title":"3. Performance Benchmark with other packages","text":"","code":"fric_bench <- microbenchmark::microbenchmark(   fundiversity = fd_fric(traits_birds, site_sp_birds),   BAT_tree = BAT::alpha(     site_sp_birds, traits_birds   ),   BAT_alpha_hull = BAT::hull.alpha(     BAT::hull.build(site_sp_birds, traits_birds)   ),   mFD = mFD::alpha.fd.multidim(     traits_birds, site_sp_birds, ind_vect = \"fric\",     scaling = FALSE, verbose = FALSE   ),   times = 30 )  ggplot2::autoplot(fric_bench) +   labs(title = \"Functional Richness (FRic)\")"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-richness-intersection-fric_intersect","dir":"Articles","previous_headings":"Other packages to compute FD indices > Benchmark between packages","what":"Functional Richness Intersection (FRic_intersect)","title":"3. Performance Benchmark with other packages","text":"","code":"fric_bench <- microbenchmark::microbenchmark(   fundiversity  = fd_fric_intersect(traits_birds, site_sp_birds) ,   betapart = betapart::functional.beta.pair(     site_sp_birds, traits_birds   ),   hillR = hillR::hill_func_parti_pairwise(     site_sp_birds, traits_birds, .progress = FALSE   ),   times = 30 )  ggplot2::autoplot(fric_bench) +   labs(title = \"Functional Richness Intersection (FRic)\")"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"raos-quadratic-entropy-q","dir":"Articles","previous_headings":"Other packages to compute FD indices > Benchmark between packages","what":"Rao’s Quadratic Entropy (Q)","title":"3. Performance Benchmark with other packages","text":"","code":"raoq_bench <- fric_bench <- microbenchmark::microbenchmark(   fundiversity = fd_raoq(traits_birds, site_sp_birds),   adiv= adiv::QE(     site_sp_birds, dist_traits_birds   ),   BAT_rao           = BAT::rao(     site_sp_birds, distance = traits_birds   ),   hillR_hill_func   = hillR::hill_func(     site_sp_birds, traits_birds, fdis = FALSE   ),   mFD_alpha_fd_hill = mFD::alpha.fd.hill(     site_sp_birds, dist_traits_birds, q = 2,     tau = \"max\"   ),   times = 30 )  ggplot2::autoplot(raoq_bench) +   labs(title = \"Rao's Quadatric Entropy (Q)\")"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"benchmark-within-fundiversity","dir":"Articles","previous_headings":"","what":"Benchmark within fundiversity","title":"3. Performance Benchmark with other packages","text":"now proceed performance evaluation functions within fundiversity datasets increasing sizes.","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"increasing-the-number-of-species","dir":"Articles","previous_headings":"Benchmark within fundiversity","what":"Increasing the number of species","title":"3. Performance Benchmark with other packages","text":"","code":"make_more_sp <- function(n) {   traits <- do.call(rbind, replicate(n, traits_birds, simplify = FALSE))   row.names(traits) <- paste0(\"sp\", seq_len(nrow(traits)))    site_sp <- do.call(cbind, replicate(n, site_sp_birds, simplify = FALSE))   colnames(site_sp) <- paste0(\"sp\", seq_len(ncol(site_sp)))    list(tr = traits, si = site_sp) }  null_sp_1000   <- make_more_sp(5) null_sp_10000  <- make_more_sp(50) null_sp_100000 <- make_more_sp(500)"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-richness","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of species","what":"Functional Richness","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sp_fric <- microbenchmark::microbenchmark(   species_200    = fd_fric(     traits_birds, site_sp_birds),   species_1000   = fd_fric(  null_sp_1000$tr, null_sp_1000$si),   species_10000  = fd_fric( null_sp_10000$tr, null_sp_10000$si),   species_100000 = fd_fric(null_sp_100000$tr, null_sp_100000$si),   times = 30 )  ggplot2::autoplot(bench_sp_fric) bench_sp_fric #> Unit: milliseconds #>            expr        min         lq       mean     median         uq        max neval  cld #>     species_200   12.40461   12.86473   13.63794   13.65822   13.96949   15.64313    30 a    #>    species_1000   23.31024   23.98235   24.77462   24.52898   24.99526   32.20389    30  b   #>   species_10000  152.16972  153.69475  155.65197  154.41463  155.87235  167.39586    30   c  #>  species_100000 1538.24210 1552.02784 1573.05390 1571.92017 1587.70159 1629.76043    30    d"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-divergence","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of species","what":"Functional Divergence","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sp_fdiv <- microbenchmark::microbenchmark(   species_200    = fd_fdiv(     traits_birds, site_sp_birds),   species_1000   = fd_fdiv(  null_sp_1000$tr, null_sp_1000$si),   species_10000  = fd_fdiv( null_sp_10000$tr, null_sp_10000$si),   species_100000 = fd_fdiv(null_sp_100000$tr, null_sp_100000$si),   times = 30 )  ggplot2::autoplot(bench_sp_fdiv) bench_sp_fdiv #> Unit: milliseconds #>            expr        min         lq       mean     median         uq        max neval cld #>     species_200   38.18281   39.33241   41.03782   39.80735   40.19474   63.38092    30 a   #>    species_1000   52.21140   53.58856   54.88775   54.00482   54.58979   61.12244    30 a   #>   species_10000  215.96505  218.21261  227.32449  221.46767  231.33971  262.64920    30  b  #>  species_100000 1996.22764 2035.16809 2090.07993 2068.75306 2097.02749 2805.37816    30   c"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"raos-quadratic-entropy","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of species","what":"Rao’s Quadratic Entropy","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sp_raoq <- microbenchmark::microbenchmark(   species_200    = fd_raoq(     traits_birds, site_sp_birds),   species_1000   = fd_raoq(  null_sp_1000$tr, null_sp_1000$si),   species_10000  = fd_raoq( null_sp_10000$tr, null_sp_10000$si),   times = 30 )  ggplot2::autoplot(bench_sp_raoq) bench_sp_raoq #> Unit: milliseconds #>           expr         min           lq         mean       median           uq          max neval cld #>    species_200    1.537703     1.751935     1.954434     1.950017     2.041037     3.230497    30  a  #>   species_1000   31.957110    34.274255    39.128452    35.156704    37.556228    66.194976    30  a  #>  species_10000 9890.756358 10163.144236 11121.366410 11055.979331 11964.694993 13632.668874    30   b"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-evenness","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of species","what":"Functional Evenness","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sp_feve <- microbenchmark::microbenchmark(   species_200    = fd_feve(     traits_birds, site_sp_birds),   species_1000   = fd_feve(  null_sp_1000$tr, null_sp_1000$si),   species_10000  = fd_feve( null_sp_10000$tr, null_sp_10000$si),   times = 15 )  ggplot2::autoplot(bench_sp_feve) bench_sp_feve #> Unit: milliseconds #>           expr         min          lq        mean      median          uq         max neval cld #>    species_200    22.25434    23.58857    26.28398    24.66652    25.41282    49.21613    15  a  #>   species_1000   133.12192   148.39296   167.29508   163.98844   186.30949   212.94652    15  a  #>  species_10000 26209.90991 27553.75296 28085.39492 28186.57578 28599.03918 29311.05335    15   b"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"comparing-between-indices","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of species","what":"Comparing between indices","title":"3. Performance Benchmark with other packages","text":"","code":"all_bench_sp <- list(fric = bench_sp_fric,                      fdiv = bench_sp_fdiv,                      raoq = bench_sp_raoq,                      feve = bench_sp_feve) %>%   bind_rows(.id = \"fd_index\") %>%   mutate(n_sp = gsub(\"species_\", \"\", expr) %>%            as.numeric())  all_bench_sp %>%   ggplot(aes(n_sp, time * 1e-9, color = fd_index)) +   geom_point(alpha = 1/3) +   geom_smooth() +   scale_x_log10() +   scale_y_log10() +   scale_color_brewer(type = \"qual\",                      labels = c(fric = \"FRic\", fdiv = \"FDiv\", raoq = \"Rao's Q\",                                 feve = \"FEve\")) +   labs(title = \"Performance comparison between indices\",        x = \"# of species\", y = \"Time (in seconds)\",        color = \"FD index\") +   theme_bw() +   theme(aspect.ratio = 1)"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"increasing-the-number-of-sites","dir":"Articles","previous_headings":"Benchmark within fundiversity","what":"Increasing the number of sites","title":"3. Performance Benchmark with other packages","text":"","code":"make_more_sites <- function(n) {   site_sp <- do.call(rbind, replicate(n, site_sp_birds, simplify = FALSE))   rownames(site_sp) <- paste0(\"s\", seq_len(nrow(site_sp)))    site_sp }  site_sp_100   <- make_more_sites(12) site_sp_1000  <- make_more_sites(120) site_sp_10000 <- make_more_sites(1200)"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-richness-1","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of sites","what":"Functional Richness","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sites_fric <- microbenchmark::microbenchmark(   sites_10    = fd_fric(traits_birds, site_sp_birds),   sites_100   = fd_fric(traits_birds, site_sp_100),   sites_1000  = fd_fric(traits_birds, site_sp_1000),   sites_10000 = fd_fric(traits_birds, site_sp_10000),   times = 15 )  ggplot2::autoplot(bench_sites_fric) bench_sites_fric #> Unit: milliseconds #>         expr        min         lq       mean     median         uq        max neval  cld #>     sites_10   12.60195   13.45944   14.88054   13.96007   14.29602   21.66510    15 a    #>    sites_100   45.57530   47.25923   49.87524   48.75620   52.29567   56.19952    15  b   #>   sites_1000  372.72833  386.35628  400.43169  395.60903  408.99573  449.87164    15   c  #>  sites_10000 3833.05136 3885.11306 3921.60544 3919.29055 3942.32492 4016.96576    15    d"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-divergence-1","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of sites","what":"Functional Divergence","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sites_fdiv <- microbenchmark::microbenchmark(   sites_10    = fd_fdiv(traits_birds, site_sp_birds),   sites_100   = fd_fdiv(traits_birds, site_sp_100),   sites_1000  = fd_fdiv(traits_birds, site_sp_1000),   sites_10000 = fd_fdiv(traits_birds, site_sp_10000),   times = 15 )  ggplot2::autoplot(bench_sites_fdiv) bench_sites_fdiv #> Unit: milliseconds #>         expr        min         lq       mean     median         uq        max neval  cld #>     sites_10   38.17040   39.17880   40.79484   39.59029   42.08936   45.43952    15 a    #>    sites_100   85.09805   85.99399   94.77048   86.88365   96.33675  149.45931    15  b   #>   sites_1000  538.76135  545.03628  582.84610  564.85683  605.87486  677.86382    15   c  #>  sites_10000 5278.55172 5336.69296 5405.90861 5378.53730 5458.24597 5552.26594    15    d"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"raos-quadratic-entropy-1","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of sites","what":"Rao’s Quadratic Entropy","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sites_raoq = microbenchmark::microbenchmark(   sites_10    = fd_raoq(traits = NULL, site_sp_birds, dist_traits_birds),   sites_100   = fd_raoq(traits = NULL, site_sp_100,   dist_traits_birds),   sites_1000  = fd_raoq(traits = NULL, site_sp_1000,  dist_traits_birds),   sites_10000 = fd_raoq(traits = NULL, site_sp_10000, dist_traits_birds),   times = 15 )  ggplot2::autoplot(bench_sites_raoq) bench_sites_raoq #> Unit: milliseconds #>         expr          min           lq         mean       median           uq          max neval cld #>     sites_10     1.443757     1.717630     1.887153     1.861230     2.037991     2.518933    15  a  #>    sites_100     5.689849     6.004428     6.718675     6.178415     6.460348    13.786219    15  a  #>   sites_1000   158.130064   158.814848   160.907719   159.296631   163.977418   166.066294    15  a  #>  sites_10000 16296.391504 17530.369693 18080.130808 18193.538354 18411.571843 21033.249202    15   b"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"functional-evenness-1","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of sites","what":"Functional Evenness","title":"3. Performance Benchmark with other packages","text":"","code":"bench_sites_feve <- microbenchmark::microbenchmark(   sites_10    = fd_feve(traits = NULL, site_sp_birds, dist_traits_birds),   sites_100   = fd_feve(traits = NULL, site_sp_100,   dist_traits_birds),   sites_1000  = fd_feve(traits = NULL, site_sp_1000,  dist_traits_birds),   sites_10000 = fd_feve(traits = NULL, site_sp_10000, dist_traits_birds),   times = 15 )  ggplot2::autoplot(bench_sites_feve) bench_sites_feve #> Unit: milliseconds #>         expr         min          lq        mean      median          uq         max neval cld #>     sites_10    20.26885    20.79379    25.80265    21.06491    21.39182    90.92815    15 a   #>    sites_100   113.64419   115.81009   123.60943   118.04145   123.54457   185.57582    15 a   #>   sites_1000  1034.37573  1107.36408  1146.78358  1119.68000  1134.07348  1668.68480    15  b  #>  sites_10000 10779.65515 10969.94333 11249.27062 11090.00824 11317.37080 12341.22800    15   c"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_2-performance.html","id":"comparing-between-indices-1","dir":"Articles","previous_headings":"Benchmark within fundiversity > Increasing the number of sites","what":"Comparing between indices","title":"3. Performance Benchmark with other packages","text":"","code":"all_bench_sites <- list(fric = bench_sites_fric,                         fdiv = bench_sites_fdiv,                         raoq = bench_sites_raoq,                         feve = bench_sites_feve) %>%   bind_rows(.id = \"fd_index\") %>%   mutate(n_sites = gsub(\"sites\", \"\", expr) %>%            as.numeric())  all_bench_sites %>%   ggplot(aes(n_sites, time * 1e-9, color = fd_index)) +   geom_point(alpha = 1/3) +   geom_smooth() +   scale_x_log10() +   scale_y_log10() +   scale_color_brewer(type = \"qual\",                      labels = c(fric = \"FRic\", fdiv = \"FDiv\", raoq = \"Rao's Q\",                                 feve = \"FEve\")) +   labs(title = \"Performance comparison between indices\",        x = \"# of sites\", y = \"Time (in seconds)\",        color = \"FD index\") +   theme_bw() +   theme(aspect.ratio = 1) #>  seconds needed to generate this document: 1691.449 sec elapsed #> ─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.2.1 (2022-06-23) #>  os       Ubuntu 20.04.5 LTS #>  system   x86_64, linux-gnu #>  ui       RStudio #>  language (EN) #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       Etc/UTC #>  date     2022-11-15 #>  rstudio  2022.02.0+443 Prairie Trillium (server) #>  pandoc   2.17.1.1 @ /usr/lib/rstudio-server/bin/quarto/bin/ (via rmarkdown) #>  #> ─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package           * version    date (UTC) lib source #>  abind               1.4-5      2016-07-21 [1] CRAN (R 4.2.0) #>  ade4                1.7-19     2022-04-19 [1] CRAN (R 4.2.0) #>  adegraphics         1.0-16     2021-09-16 [1] CRAN (R 4.2.1) #>  adiv                2.2        2022-10-06 [1] CRAN (R 4.2.1) #>  ape                 5.6-2      2022-03-02 [1] CRAN (R 4.2.0) #>  assertthat          0.2.1      2019-03-21 [3] CRAN (R 4.1.3) #>  base64enc           0.1-3      2015-07-28 [1] CRAN (R 4.2.1) #>  BAT                 2.9.2      2022-11-08 [1] CRAN (R 4.2.1) #>  betapart            1.5.6      2022-04-06 [1] CRAN (R 4.2.1) #>  cachem              1.0.6      2021-08-19 [3] CRAN (R 4.1.3) #>  caret               6.0-93     2022-08-09 [1] CRAN (R 4.2.1) #>  class               7.3-20     2022-01-13 [5] CRAN (R 4.1.2) #>  cli                 3.4.1      2022-09-23 [1] CRAN (R 4.2.1) #>  cluster             2.1.3      2022-03-28 [5] CRAN (R 4.1.3) #>  clusterGeneration   1.3.7      2020-12-15 [1] CRAN (R 4.2.0) #>  coda                0.19-4     2020-09-30 [1] CRAN (R 4.2.0) #>  codetools           0.2-18     2020-11-04 [5] CRAN (R 4.0.3) #>  colorspace          2.0-3      2022-02-21 [1] CRAN (R 4.2.0) #>  combinat            0.0-8      2012-10-29 [1] CRAN (R 4.2.0) #>  crayon              1.5.1      2022-03-26 [1] CRAN (R 4.2.0) #>  data.table          1.14.2     2021-09-27 [1] CRAN (R 4.2.0) #>  DBI                 1.1.2      2021-12-20 [3] CRAN (R 4.1.3) #>  deldir              1.0-6      2021-10-23 [1] CRAN (R 4.2.1) #>  dendextend          1.16.0     2022-07-04 [1] CRAN (R 4.2.1) #>  digest              0.6.29     2021-12-01 [1] CRAN (R 4.2.0) #>  doParallel          1.0.17     2022-02-07 [1] CRAN (R 4.2.1) #>  doSNOW              1.0.20     2022-02-04 [1] CRAN (R 4.2.1) #>  dplyr             * 1.0.10     2022-09-01 [1] CRAN (R 4.2.1) #>  e1071               1.7-12     2022-10-24 [1] CRAN (R 4.2.1) #>  ellipsis            0.3.2      2021-04-29 [1] CRAN (R 4.2.0) #>  evaluate            0.18       2022-11-07 [1] CRAN (R 4.2.1) #>  expm                0.999-6    2021-01-13 [1] CRAN (R 4.2.0) #>  fansi               1.0.3      2022-03-24 [1] CRAN (R 4.2.0) #>  farver              2.1.0      2021-02-28 [1] CRAN (R 4.2.0) #>  fastcluster         1.2.3      2021-05-24 [1] CRAN (R 4.2.1) #>  fastmap             1.1.0      2021-01-25 [1] CRAN (R 4.2.1) #>  fastmatch           1.1-3      2021-07-23 [1] CRAN (R 4.2.0) #>  FD                  1.0-12.1   2022-05-02 [1] CRAN (R 4.2.0) #>  foreach             1.5.2      2022-02-02 [1] CRAN (R 4.2.1) #>  fundiversity      * 0.2.1.9000 2022-04-12 [3] Github (bisaloo/fundiversity@87652ba) #>  future              1.28.0     2022-09-02 [1] CRAN (R 4.2.1) #>  future.apply        1.10.0     2022-11-05 [1] CRAN (R 4.2.1) #>  generics            0.1.2      2022-01-31 [1] CRAN (R 4.2.0) #>  geometry            0.4.6      2022-04-18 [1] CRAN (R 4.2.0) #>  ggplot2           * 3.3.6      2022-05-03 [1] CRAN (R 4.2.0) #>  globals             0.16.1     2022-08-28 [1] CRAN (R 4.2.1) #>  glue                1.6.2      2022-02-24 [1] CRAN (R 4.2.0) #>  gower               1.0.0      2022-02-03 [1] CRAN (R 4.2.1) #>  gridExtra           2.3        2017-09-09 [1] CRAN (R 4.2.1) #>  gtable              0.3.0      2019-03-25 [1] CRAN (R 4.2.0) #>  hardhat             1.2.0      2022-06-30 [1] CRAN (R 4.2.1) #>  here                1.0.1      2020-12-13 [3] CRAN (R 4.1.3) #>  highr               0.9        2021-04-16 [1] CRAN (R 4.2.1) #>  hillR               0.5.1      2021-03-02 [1] CRAN (R 4.2.0) #>  hms                 1.1.1      2021-09-26 [1] CRAN (R 4.2.0) #>  htmltools           0.5.3      2022-07-18 [1] CRAN (R 4.2.1) #>  htmlwidgets         1.5.4      2021-09-08 [1] CRAN (R 4.2.1) #>  httr                1.4.4      2022-08-17 [1] CRAN (R 4.2.1) #>  hypervolume         3.0.4      2022-05-28 [1] CRAN (R 4.2.1) #>  igraph              1.3.2      2022-06-13 [1] CRAN (R 4.2.0) #>  interp              1.1-3      2022-07-13 [1] CRAN (R 4.2.1) #>  ipred               0.9-13     2022-06-02 [1] CRAN (R 4.2.1) #>  iterators           1.0.14     2022-02-05 [1] CRAN (R 4.2.1) #>  itertools           0.1-3      2014-03-12 [1] CRAN (R 4.2.1) #>  jpeg                0.1-9      2021-07-24 [1] CRAN (R 4.2.1) #>  jsonlite            1.8.3      2022-10-21 [1] CRAN (R 4.2.1) #>  KernSmooth          2.23-20    2021-05-03 [5] CRAN (R 4.0.5) #>  knitr               1.40       2022-08-24 [1] CRAN (R 4.2.1) #>  ks                  1.13.5     2022-04-14 [1] CRAN (R 4.2.1) #>  lattice             0.20-45    2021-09-22 [3] CRAN (R 4.1.3) #>  latticeExtra        0.6-30     2022-07-04 [1] CRAN (R 4.2.1) #>  lava                1.7.0      2022-10-25 [1] CRAN (R 4.2.1) #>  lifecycle           1.0.3      2022-10-07 [1] CRAN (R 4.2.1) #>  listenv             0.8.0      2019-12-05 [1] CRAN (R 4.2.1) #>  lpSolve             5.6.15     2020-01-24 [1] CRAN (R 4.2.0) #>  lubridate           1.9.0      2022-11-06 [1] CRAN (R 4.2.1) #>  magic               1.6-0      2022-02-09 [1] CRAN (R 4.2.0) #>  magrittr            2.0.3      2022-03-30 [1] CRAN (R 4.2.0) #>  maps                3.4.0      2021-09-25 [1] CRAN (R 4.2.0) #>  MASS                7.3-58.1   2022-08-03 [3] CRAN (R 4.2.1) #>  Matrix              1.4-1      2022-03-23 [3] CRAN (R 4.1.3) #>  mclust              6.0.0      2022-10-31 [1] CRAN (R 4.2.1) #>  memoise             2.0.1      2021-11-26 [3] CRAN (R 4.1.3) #>  mFD                 1.0.2      2022-11-08 [1] CRAN (R 4.2.1) #>  mgcv                1.8-40     2022-03-29 [5] CRAN (R 4.1.3) #>  microbenchmark      1.4.9      2021-11-09 [3] CRAN (R 4.1.3) #>  mnormt              2.1.0      2022-06-07 [1] CRAN (R 4.2.0) #>  ModelMetrics        1.2.2.2    2020-03-17 [1] CRAN (R 4.2.1) #>  multcomp            1.4-19     2022-04-26 [1] CRAN (R 4.2.0) #>  munsell             0.5.0      2018-06-12 [1] CRAN (R 4.2.0) #>  mvtnorm             1.1-3      2021-10-08 [1] CRAN (R 4.2.0) #>  nlme                3.1-159    2022-08-09 [3] CRAN (R 4.2.1) #>  nls2                0.3-3      2022-05-02 [1] CRAN (R 4.2.1) #>  nnet                7.3-17     2022-01-13 [5] CRAN (R 4.1.2) #>  numDeriv            2016.8-1.1 2019-06-06 [1] CRAN (R 4.2.0) #>  palmerpenguins      0.1.1      2022-08-15 [1] CRAN (R 4.2.1) #>  parallelly          1.32.1     2022-07-21 [1] CRAN (R 4.2.1) #>  patchwork           1.1.2      2022-08-19 [1] CRAN (R 4.2.1) #>  pdist               1.2.1      2022-05-02 [1] CRAN (R 4.2.1) #>  permute             0.9-7      2022-01-27 [1] CRAN (R 4.2.0) #>  phangorn            2.9.0      2022-06-16 [1] CRAN (R 4.2.0) #>  phylobase           0.8.10     2020-03-01 [1] CRAN (R 4.2.1) #>  phytools            1.0-3      2022-04-05 [1] CRAN (R 4.2.0) #>  picante             1.8.2      2020-06-10 [1] CRAN (R 4.2.1) #>  pillar              1.7.0      2022-02-01 [1] CRAN (R 4.2.0) #>  pkgconfig           2.0.3      2019-09-22 [1] CRAN (R 4.2.0) #>  plotrix             3.8-2      2021-09-08 [1] CRAN (R 4.2.0) #>  plyr                1.8.7      2022-03-24 [1] CRAN (R 4.2.0) #>  png                 0.1-7      2013-12-03 [1] CRAN (R 4.2.1) #>  pracma              2.4.2      2022-09-22 [1] CRAN (R 4.2.1) #>  prettyunits         1.1.1      2020-01-24 [1] CRAN (R 4.2.0) #>  pROC                1.18.0     2021-09-03 [1] CRAN (R 4.2.1) #>  prodlim             2019.11.13 2019-11-17 [1] CRAN (R 4.2.1) #>  progress            1.2.2      2019-05-16 [1] CRAN (R 4.2.0) #>  proto               1.0.0      2016-10-29 [1] CRAN (R 4.2.1) #>  proxy               0.4-27     2022-06-09 [1] CRAN (R 4.2.1) #>  purrr               0.3.4      2020-04-17 [1] CRAN (R 4.2.0) #>  quadprog            1.5-8      2019-11-20 [1] CRAN (R 4.2.0) #>  R6                  2.5.1      2021-08-19 [1] CRAN (R 4.2.0) #>  raster              3.6-3      2022-09-18 [1] CRAN (R 4.2.1) #>  rcdd                1.5        2021-11-18 [1] CRAN (R 4.2.1) #>  RColorBrewer        1.1-3      2022-04-03 [1] CRAN (R 4.2.0) #>  Rcpp                1.0.8.3    2022-03-17 [1] CRAN (R 4.2.0) #>  recipes             1.0.3      2022-11-09 [1] CRAN (R 4.2.1) #>  reshape2            1.4.4      2020-04-09 [1] CRAN (R 4.2.1) #>  rgeos               0.5-9      2021-12-15 [1] CRAN (R 4.2.1) #>  rgl                 0.110.2    2022-09-26 [1] CRAN (R 4.2.1) #>  rlang               1.0.6      2022-09-24 [1] CRAN (R 4.2.1) #>  rmarkdown           2.13       2022-03-10 [3] CRAN (R 4.1.3) #>  rncl                0.8.6      2022-03-18 [1] CRAN (R 4.2.1) #>  RNeXML              2.4.8      2022-10-19 [1] CRAN (R 4.2.1) #>  rpart               4.1.16     2022-01-24 [5] CRAN (R 4.1.2) #>  rprojroot           2.0.3      2022-04-02 [1] CRAN (R 4.2.1) #>  rstudioapi          0.14       2022-08-22 [1] CRAN (R 4.2.1) #>  sandwich            3.0-2      2022-06-15 [1] CRAN (R 4.2.0) #>  scales              1.2.0      2022-04-13 [1] CRAN (R 4.2.0) #>  scatterplot3d       0.3-41     2018-03-14 [1] CRAN (R 4.2.0) #>  sessioninfo         1.2.2      2021-12-06 [3] CRAN (R 4.1.3) #>  snow                0.4-4      2021-10-27 [1] CRAN (R 4.2.1) #>  sp                  1.5-0      2022-06-05 [1] CRAN (R 4.2.0) #>  stringi             1.7.6      2021-11-29 [1] CRAN (R 4.2.0) #>  stringr             1.4.0      2019-02-10 [1] CRAN (R 4.2.0) #>  survival            3.3-1      2022-03-03 [3] CRAN (R 4.1.3) #>  terra               1.6-17     2022-09-10 [1] CRAN (R 4.2.1) #>  TH.data             1.1-1      2022-04-26 [1] CRAN (R 4.2.0) #>  tibble              3.1.7      2022-05-03 [1] CRAN (R 4.2.0) #>  tictoc              1.0.1      2021-04-19 [3] CRAN (R 4.1.3) #>  tidyr               1.2.1      2022-09-08 [1] CRAN (R 4.2.1) #>  tidyselect          1.2.0      2022-10-10 [1] CRAN (R 4.2.1) #>  timechange          0.1.1      2022-11-04 [1] CRAN (R 4.2.1) #>  timeDate            4021.106   2022-09-30 [1] CRAN (R 4.2.1) #>  utf8                1.2.2      2021-07-24 [1] CRAN (R 4.2.0) #>  uuid                1.1-0      2022-04-19 [1] CRAN (R 4.2.1) #>  vctrs               0.5.0      2022-10-22 [1] CRAN (R 4.2.1) #>  vegan               2.6-2      2022-04-17 [1] CRAN (R 4.2.0) #>  viridis             0.6.2      2021-10-13 [1] CRAN (R 4.2.1) #>  viridisLite         0.4.0      2021-04-13 [1] CRAN (R 4.2.0) #>  withr               2.5.0      2022-03-03 [1] CRAN (R 4.2.0) #>  xfun                0.34       2022-10-18 [1] CRAN (R 4.2.1) #>  XML                 3.99-0.12  2022-10-28 [1] CRAN (R 4.2.1) #>  xml2                1.3.3      2021-11-30 [1] CRAN (R 4.2.1) #>  yaml                2.3.6      2022-10-18 [1] CRAN (R 4.2.1) #>  zoo                 1.8-10     2022-04-15 [1] CRAN (R 4.2.0) #>  #>  [1] /home/ke76dimu/R-library/4.2 #>  [2] /usr/local/lib/R/site-library #>  [3] /data/library/4.1 #>  [4] /usr/lib/R/site-library #>  [5] /usr/lib/R/library #>  #> ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_3-correctness.html","id":"changes-of-abundance","dir":"Articles","previous_headings":"","what":"Changes of abundance","title":"4. Check Numerical Correctness of Indices","text":"change abundance, coordinates (.e., species characteristics), expect changes FEve FDiv FRic. precisely, equal increases abundance species vertices convex hull don’t influence FEve, lead higher FDiv. correspond data found panel c Figure 2. compute functional diversity indices: expected, found FRic value 2 (2), FEve value 1 (1), FDiv value 0.714 (0.714). Conversely, changes abundances single trait axis don’t impact FDiv reduce FEve (correspond panel b Figure 2): can compute weighted functional diversity indices: expected, found FRic value 2 (2), FEve value 0.778 (0.778), FDiv value 0.692 (0.692).","code":"l <- 2 # common species s <- 1 # rare species  wc <- matrix(c(l, s, l, s, l, l, s, s, l), nrow = 1) colnames(wc) <- rownames(data_a) rownames(wc) <- \"site\" fric_c <- fd_fric(data_a)[[\"FRic\"]] feve_c <- fd_feve(data_a, wc)[[\"FEve\"]] fdiv_c <- fd_fdiv(data_a, wc)[[\"FDiv\"]] fdis_c <- fd_fdis(data_a, wc)[[\"FDis\"]] raoq_c <- fd_raoq(data_a, wc)[[\"Q\"]] l <- 1.5 # common species s <- 0.5 # rare species  wb <- matrix(c(l, l, 1, l, l, s, s, s, s), nrow = 1) colnames(wb) <- rownames(data_a) rownames(wb) <- \"site\" fric_b <- fd_fric(data_a)[[\"FRic\"]] feve_b <- fd_feve(data_a, wb)[[\"FEve\"]] fdiv_b <- fd_fdiv(data_a, wb)[[\"FDiv\"]] fdis_b <- fd_fdis(data_a, wb)[[\"FDis\"]] raoq_b <- fd_raoq(data_a, wb)[[\"Q\"]]"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_3-correctness.html","id":"changes-of-coordinates-traits","dir":"Articles","previous_headings":"","what":"Changes of coordinates (= traits)","title":"4. Check Numerical Correctness of Indices","text":"now change species characteristics (.e., coordinates) instead abundances. changes coordinates without changing abundances can affect diversity indices. coordinates changed species convex hull affect FEve FDiv. example, can change coordinates species distance centroid species, doesn’t affect value FDiv, put away points convex hull. decrease FEve species spaced less evenly space (corresponds panel d Figure 2): expected, found FRic value 2 (2), FEve value 0.891 (0.891), FDiv value 0.692 (0.692). can also change coordinates species (traits) affect FDiv FEve , instead, moving species convex hull keeping distance points equal. corresponds panel e Figure 2 paper: can compute functional diversity indices: expected, found FRic value 2 (2), FEve value 1 (1), FDiv value 0.78 (0.78).","code":"shift <- 1/(2*sqrt(2))  data_d <- matrix(c(   1-shift, 1-shift,   1-shift, 1+shift,   1+shift, 1-shift,   1+shift, 1+shift,   1.00 , 0.00 ,   2.00 , 1.00 ,   1.00 , 2.00 ,   0.00 , 1.00 ,   1.00 , 1.00),   byrow = TRUE,   ncol = 2 ) fric_d <- fd_fric(data_d)[[\"FRic\"]] feve_d <- fd_feve(data_d)[[\"FEve\"]] fdiv_d <- fd_fdiv(data_d)[[\"FDiv\"]] fdis_d <- fd_fdis(data_d)[[\"FDis\"]] raoq_d <- fd_raoq(data_d)[[\"Q\"]] data_e <- matrix(c(   0.0, 1.0,   0.5, 0.5,   1.0, 1.0,   1.5, 0.5,   2.0, 1.0,   1.0, 0.0,   0.5, 1.5,   1.5, 1.5,   1.0, 2.0),   byrow = TRUE,   ncol = 2 ) fric_e <- fd_fric(data_e)[[\"FRic\"]] feve_e <- fd_feve(data_e)[[\"FEve\"]] fdiv_e <- fd_fdiv(data_e)[[\"FDiv\"]] fdis_e <- fd_fdis(data_e)[[\"FDis\"]] raoq_e <- fd_raoq(data_e)[[\"Q\"]]"},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"scope","dir":"Articles","previous_headings":"","what":"Scope","title":"5. Design Principles for fundiversity","text":"fundiversity aims provide reliable tool compute functional diversity indices. used functional diversity indices defined Villéger et al. (2008), fundiversity adopts framework. Rao’s Quadratic Entropy quite popular additional functional diversity index, makes good addition panel indices computable fundiversity.","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"dependencies","dir":"Articles","previous_headings":"","what":"Dependencies","title":"5. Design Principles for fundiversity","text":"aim dependencies possible, unless remain relatively lightweight provide large speed boost. CRAN packages now automatically archived time strong dependencies, dependencies fundiversity well established, good track record remaining CRAN, ideally already large number reverse-dependencies. Based guidelines, acceptable dependencies : Rccp geometry Additionally, special care taken packages rely external libraries, installation might issue shared computing platforms users don’t super-user privileges. fundiversity however depend vegan brings quite number dependencies. vegan still heavy developed shouldn’t archived CRAN without notice. fundiversity users probably already vegan installed probably also interested community ecology analyses provided vegan. Thus depending vegan dependency installation burden.","code":""},{"path":[]},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"each-index-should-be-computed-in-its-own-separate-function","dir":"Articles","previous_headings":"Functions","what":"Each index should be computed in its own separate function","title":"5. Design Principles for fundiversity","text":"Putting index function improves maintainability shorter, easily readable functions, less control-flow. Additionally, speeds computation (versus case indices computed time) keep number columns output constant (opposed case argument control index returned single function indices).","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"input-data-should-not-be-transformed-without-any-explicit-action-from-the-user","dir":"Articles","previous_headings":"Functions","what":"Input data should not be transformed without any explicit action from the user","title":"5. Design Principles for fundiversity","text":"packages functional ecology transform data processing . One common transformation use dimensionality reduction techniques. transformations done user wish never package . Even documented function help, easily overlooked users may lead misinterpreted results. One acceptable exception function need dissimilarity matrix input, computation FEve Rao’s Quadratic Entropy. functions fundiversity accept raw trait data, sake coherence functions need dissimilarity matrix input also accept raw trait data compute dissimilarity internally. , still make minimal assumptions regarding input dataset traits quantitative. ’s case, ’s user’s responsibility choose adapted dissimilarity metric wants use.","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"inputs","dir":"Articles","previous_headings":"","what":"Inputs","title":"5. Design Principles for fundiversity","text":"Two inputs acceptable fundiversity functions: tabular data (matrix, tibble, preference data.frames) individuals rows characteristics columns. distance matrix individuals. rationale providing data.frames characteristics user-friendly, common format functional ecology, data.frames familiar object R. However, allowing data.frames doesn’t provide enough flexibility. particular, advanced users may want compute distances custom function (instead Euclidean distances).","code":""},{"path":[]},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"functions-should-output-data-frames","dir":"Articles","previous_headings":"Outputs","what":"Functions should output data.frames","title":"5. Design Principles for fundiversity","text":"functions return data.frames whenever possible several reasons: data.frames one common object R ecosystem meaning familiar beginners exist many S3 methods . data.frames enable pipe-able workflow, important already prevalent tidyverse part base R 4.1","code":""},{"path":"https://funecology.github.io/fundiversity/articles/fundiversity_4-design-principles.html","id":"the-outputs-of-functions-should-be-similar-in-structure","dir":"Articles","previous_headings":"Outputs","what":"The outputs of functions should be similar in structure","title":"5. Design Principles for fundiversity","text":"avoid steps data wrangling running analyses, functions output similar structured data. computing functional diversity indices users want compute site-level metric. make functions easy use flexible, output absolutely necessary data: column named site containing site names given user (guessed row names input site-species matrix), column named following computed functional index (FDiv, FRic, etc.) contains values indices. way functions outputs unambiguous data can easily reused merged data site-level.","code":""},{"path":"https://funecology.github.io/fundiversity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthias Grenié. Author, maintainer. Hugo Gruson. Author.","code":""},{"path":"https://funecology.github.io/fundiversity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grenié M, Gruson H (2025). fundiversity: Easy Computation Functional Diversity Indices. doi:10.5281/zenodo.4761754, R package version 1.1.1, https://CRAN.R-project.org/package=fundiversity. Grenié M, Gruson H (2023). “fundiversity: modular R package compute functional diversity indices.” Ecography, 2023(3), e06585. doi:10.1111/ecog.06585.","code":"@Manual{,   title = {{fundiversity}: Easy Computation of Functional Diversity Indices},   author = {Matthias Grenié and Hugo Gruson},   year = {2025},   note = {R package version 1.1.1},   url = {https://CRAN.R-project.org/package=fundiversity},   doi = {10.5281/zenodo.4761754}, } @Article{,   title = {{fundiversity}: a modular R package to compute functional diversity indices},   journal = {Ecography},   author = {Matthias Grenié and Hugo Gruson},   year = {2023},   doi = {10.1111/ecog.06585},   volume = {2023},   number = {3},   pages = {e06585}, }"},{"path":"https://funecology.github.io/fundiversity/index.html","id":"fundiversity-","dir":"","previous_headings":"","what":"Easy Computation of Functional Diversity Indices","title":"Easy Computation of Functional Diversity Indices","text":"fundiversity provides lightweight package compute common functional diversity indices. get glimpse fundiversity can refer introductory vignette. package built using clear, public design principles inspired experience user feedback.","code":""},{"path":"https://funecology.github.io/fundiversity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Computation of Functional Diversity Indices","text":"can install stable version CRAN : Alternatively, can install development version :","code":"install.packages(\"fundiversity\") install.packages(\"fundiversity\", repos = \"https://bisaloo.r-universe.dev\")"},{"path":"https://funecology.github.io/fundiversity/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Easy Computation of Functional Diversity Indices","text":"fundiversity lets compute six functional diversity indices: Functional Richness fd_fric(), intersection convex hulls fd_fric_intersect(), Functional Divergence fd_fdiv(), Rao’s Quadratic Entropy fd_raoq(), Functional Dispersion fd_fdis() Functional Evenness fd_feve(). can brief overview indices introductory vignette. indices can computed either using global trait data site-level: compute Rao’s Quadratic Entropy, user can also provide distance matrix species directly:","code":"library(\"fundiversity\")  # If only the trait dataset is specified, considers all species together # by default fd_fric(traits_birds) #>   site     FRic #> 1   s1 230967.7  # We can also compute diversity across sites fd_fric(traits_birds, site_sp_birds) #>        site       FRic #> 1  elev_250 171543.730 #> 2  elev_500 185612.548 #> 3 elev_1000 112600.176 #> 4 elev_1500  66142.748 #> 5 elev_2000  20065.764 #> 6 elev_2500  18301.176 #> 7 elev_3000  17530.651 #> 8 elev_3500   3708.735 dist_traits_birds = as.matrix(dist(traits_birds))  fd_raoq(traits = NULL, dist_matrix = dist_traits_birds) #>   site        Q #> 1   s1 170.0519"},{"path":[]},{"path":"https://funecology.github.io/fundiversity/index.html","id":"parallelization","dir":"","previous_headings":"","what":"Parallelization","title":"Easy Computation of Functional Diversity Indices","text":"Thanks future.apply package, functions (except fd_raoq()) within fundiversity support parallelization future backend. toggle parallelization follow future syntax: details please refer parallelization vignette use vignette(\"fundiversity_1-parallel\", package = \"fundiversity\") within R. Note: parallelization memoization mutually exclusive, computation parallel, fundiversity falls back unmemoised versions function.","code":"future::plan(future::multisession) fd_fdiv(traits_birds) #>   site      FDiv #> 1   s1 0.7282172"},{"path":"https://funecology.github.io/fundiversity/index.html","id":"available-functional-diversity-indices","dir":"","previous_headings":"","what":"Available functional diversity indices","title":"Easy Computation of Functional Diversity Indices","text":"According Pavoine & Bonsall (2011) classification, functional diversity indices can classified three “domains” assess different properties functional space: richness, divergence, regularity. made sure computations package correct correctness vignette. fundiversity provides function compute indices assess three facets site scale:","code":""},{"path":"https://funecology.github.io/fundiversity/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related Packages","title":"Easy Computation of Functional Diversity Indices","text":"Several packages exist compute functional diversity indices. performance comparison related packages. mention (mention numerous wrappers around packages):","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Functional Dispersion (FDis) — fd_fdis","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"function computes Functional Dispersion (FDis) following Laliberté & Legendre (2010). NB: site contains species FDis equal 0.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"","code":"fd_fdis(traits, sp_com)"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"traits Trait matrix species rows traits columns. contain exclusively numerical values. can either matrix, data.frame, Matrix::Matrix() object. sp_com Site-species matrix sites rows species columns provided, function considers species equal abundance single site. can either matrix, data.frame, Matrix::Matrix() object.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"data.frame two columns: site names sites row names input sp_com, FDis values functional dispersion site. sp_com argument provided sp_com rownames, arbitrary rownames s1, s2, s3, etc. used. NB: site contains species FDis equal 0.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"computation function can parallelized thanks future::plan(). get information parallelize computation please refer parallelization vignette : vignette(\"fundiversity_1-parallel\", package = \"fundiversity\").","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"Laliberté, E., & Legendre, P. (2010). distance-based framework measuring functional diversity multiple traits. Ecology, 91(1), 299–305. doi:10.1890/08-2244.1","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Functional Dispersion (FDis) — fd_fdis","text":"","code":"data(traits_birds) data(site_sp_birds) fd_fdis(traits_birds, site_sp_birds) #>        site      FDis #> 1  elev_250 151.38851 #> 2  elev_500 153.79982 #> 3 elev_1000 161.57816 #> 4 elev_1500 144.30915 #> 5 elev_2000  76.69386 #> 6 elev_2500  78.44577 #> 7 elev_3000  88.25201 #> 8 elev_3500  68.29563"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Functional Divergence (FDiv) — fd_fdiv","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"function computes Functional Divergence (FDiv) following Villéger et al. (2008). NB: site contains species FDiv equal 0. site less traits species, FDiv equal NaN.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"","code":"fd_fdiv(traits, sp_com)"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"traits Trait matrix species rows traits columns. contain exclusively numerical values. can either matrix, data.frame, Matrix::Matrix() object. sp_com Site-species matrix sites rows species columns provided, function considers species equal abundance single site. can either matrix, data.frame, Matrix::Matrix() object.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"data.frame two columns: site names sites row names input sp_com, FDiv values functional divergence site. sp_com argument provided sp_com rownames, arbitrary rownames s1, s2, s3, etc. used. NB: site contains species FDiv equal 0. site less traits species, FDiv equal NaN.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"default, loading fundiversity, functions compute convex hulls memoised memoise package installed (results cached avoid recomputing functional volume twice). deactivate behavior can set option fundiversity.memoise FALSE running following line: options(fundiversity.memoise = FALSE). use interactively affect current session. Add script(s) .Rprofile file avoid toggling time. changing option, behavior automatically change next time run function. Note: memoisation available memoise package installed without parallelization, otherwise fundiversity use unmemoised versions functions. words, memoization parallelization mutually exclusive.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"computation function can parallelized thanks future::plan(). get information parallelize computation please refer parallelization vignette : vignette(\"fundiversity_1-parallel\", package = \"fundiversity\").","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"Villéger S., Mason N. W. H., Mouillot D. (2008), New multidimensional functional diversity indices multifaceted framework functional ecology, Ecology 89(8), doi:10.1890/07-1206.1","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fdiv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Functional Divergence (FDiv) — fd_fdiv","text":"","code":"data(traits_birds) fd_fdiv(traits_birds) #>   site      FDiv #> 1   s1 0.7282172"},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Functional Evenness (FEve) — fd_feve","title":"Compute Functional Evenness (FEve) — fd_feve","text":"function computes Functional Evenness (FEve) following Villéger et al. (2008). NB: definition FEve equal NA number species per site strictly lower 3.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Functional Evenness (FEve) — fd_feve","text":"","code":"fd_feve(traits = NULL, sp_com, dist_matrix = NULL)"},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Functional Evenness (FEve) — fd_feve","text":"traits Trait matrix species rows traits columns. contain exclusively numerical values. can either matrix, data.frame, Matrix::Matrix() object. sp_com Site-species matrix sites rows species columns provided, function considers species equal abundance single site. can either matrix, data.frame, Matrix::Matrix() object. dist_matrix dissimilarity matrix can provided instead trait data.frame (default: NULL). can either matrix, data.frame, Matrix::Matrix() object.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Functional Evenness (FEve) — fd_feve","text":"data.frame two columns: site character column contains site names based input sp_com row names, FEve numeric column contains FEve values corresponding site. sp_com argument provided sp_com rownames, arbitrary rownames s1, s2, s3, etc. used. NB: definition FEve equal NA number species per site strictly lower 3.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Compute Functional Evenness (FEve) — fd_feve","text":"computation function can parallelized thanks future::plan(). get information parallelize computation please refer parallelization vignette : vignette(\"fundiversity_1-parallel\", package = \"fundiversity\").","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Functional Evenness (FEve) — fd_feve","text":"Villéger, S., Mason, N.W.H., Mouillot, D., 2008. New Multidimensional Functional Diversity Indices Multifaceted Framework Functional Ecology. Ecology 89, 2290–2301. doi:10.1890/07-1206.1","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_feve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Functional Evenness (FEve) — fd_feve","text":"","code":"data(traits_birds) fd_feve(traits_birds) #>   site      FEve #> 1   s1 0.3743341"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Functional Richness (FRic) — fd_fric","title":"Compute Functional Richness (FRic) — fd_fric","text":"Functional Richness computed volume convex hull included traits following Villéger et al. (2008). NB: FRic equal NA strictly less species site number provided traits.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Functional Richness (FRic) — fd_fric","text":"","code":"fd_fric(traits, sp_com, stand = FALSE)"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Functional Richness (FRic) — fd_fric","text":"traits Trait matrix species rows traits columns. contain exclusively numerical values. can either matrix, data.frame, Matrix::Matrix() object. sp_com Site-species matrix sites rows species columns provided, function considers species equal abundance single site. can either matrix, data.frame, Matrix::Matrix() object. stand boolean indicating whether standardize FRic values observed maximum species (default: FALSE). scales FRic 0 1. NB: maximum FRic values considers species present site-species trait matrices. want consider species absent site-species matrix, add corresponding columns 0s.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Functional Richness (FRic) — fd_fric","text":"data.frame two columns: site names sites row names input sp_com, FRic values functional richness site. sp_com argument provided sp_com rownames, arbitrary rownames s1, s2, s3, etc. used. NB: FRic equal NA strictly less species site number provided traits. Note species strictly different trait combinations considered unique, species share exact trait values across traits considered one species.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Functional Richness (FRic) — fd_fric","text":"default, loading fundiversity, functions compute convex hulls memoised memoise package installed (results cached avoid recomputing functional volume twice). deactivate behavior can set option fundiversity.memoise FALSE running following line: options(fundiversity.memoise = FALSE). use interactively affect current session. Add script(s) .Rprofile file avoid toggling time. changing option, behavior automatically change next time run function. Note: memoisation available memoise package installed without parallelization, otherwise fundiversity use unmemoised versions functions. words, memoization parallelization mutually exclusive.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Compute Functional Richness (FRic) — fd_fric","text":"computation function can parallelized thanks future::plan(). get information parallelize computation please refer parallelization vignette : vignette(\"fundiversity_1-parallel\", package = \"fundiversity\").","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Functional Richness (FRic) — fd_fric","text":"Cornwell W. K., Schwilk D. W., Ackerly D. D. (2006), trait-based test habitat filtering; convex hull volume, Ecology 84(6), doi:10.1890/0012-9658(2006)87[1465:ATTFHF]2.0.CO;2","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Functional Richness (FRic) — fd_fric","text":"","code":"data(traits_birds) fd_fric(traits_birds) #>   site     FRic #> 1   s1 230967.7"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"Compute volume intersection convex hulls pairs sites (including self-intersection, corresponds convex hull). Note standardizing convex hulls intersections, function uses convex hull provided traits, thus standardized volume self-intersection hulls can lower one. NB: FRic_intersect equal NA strictly less species one sites number provided traits.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"","code":"fd_fric_intersect(traits, sp_com, stand = FALSE)"},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"traits Trait matrix species rows traits columns. contain exclusively numerical values. can either matrix, data.frame, Matrix::Matrix() object. sp_com Site-species matrix sites rows species columns provided, function considers species equal abundance single site. can either matrix, data.frame, Matrix::Matrix() object. stand boolean indicating whether standardize FRic values observed maximum species (default: FALSE). scales FRic 0 1. NB: maximum FRic values considers species present site-species trait matrices. want consider species absent site-species matrix, add corresponding columns 0s.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"data.frame three columns: first_site names first site used pair sp_com, second_site names first site used pair, FRic_intersect volume convex hulls intersection pair site. sp_com argument provided sp_com rownames, arbitrary rownames s1, s2, s3, etc. used. NB: FRic_intersect equal NA strictly less species one sites number provided traits. Note species strictly different trait combinations considered unique, species share exact trait values across traits considered one species.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"default, loading fundiversity, functions compute convex hulls memoised memoise package installed (results cached avoid recomputing functional volume twice). deactivate behavior can set option fundiversity.memoise FALSE running following line: options(fundiversity.memoise = FALSE). use interactively affect current session. Add script(s) .Rprofile file avoid toggling time. changing option, behavior automatically change next time run function. Note: memoisation available memoise package installed without parallelization, otherwise fundiversity use unmemoised versions functions. words, memoization parallelization mutually exclusive.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"parallelization","dir":"Reference","previous_headings":"","what":"Parallelization","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"computation function can parallelized thanks future::plan(). get information parallelize computation please refer parallelization vignette : vignette(\"fundiversity_1-parallel\", package = \"fundiversity\").","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"Villéger S., Grenouillet G., Brosse S. (2013), Decomposing functional \\(\\beta\\)-diversity reveals low functional \\(\\beta\\)-diversity driven low functional turnover European fish assemblages, Global Ecology Biogeography, 22(6), 671–681. doi:10.1111/geb.12021 . Zhao T., Villéger S., Cucherousset J. (2019). Accounting intraspecific diversity examining relationships non-native species functional diversity. Oecologia, 189(1), 171-183. doi:10.1007/s00442-018-4311-3 .","code":""},{"path":[]},{"path":"https://funecology.github.io/fundiversity/reference/fd_fric_intersect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersection between convex hulls of pairs of sites — fd_fric_intersect","text":"","code":"data(traits_birds) fd_fric_intersect(traits_birds) #>   first_site second_site FRic_intersect #> 1         s1          s1       230967.7"},{"path":"https://funecology.github.io/fundiversity/reference/fd_raoq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Rao's entropy index (Rao's Q) — fd_raoq","title":"Compute Rao's entropy index (Rao's Q) — fd_raoq","text":"function computes Rao's Quadratic Entropy following Rao (1982). NB: Rao's quadratic entropy 0 species site.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_raoq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Rao's entropy index (Rao's Q) — fd_raoq","text":"","code":"fd_raoq(traits = NULL, sp_com, dist_matrix = NULL)"},{"path":"https://funecology.github.io/fundiversity/reference/fd_raoq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Rao's entropy index (Rao's Q) — fd_raoq","text":"traits Trait matrix species rows traits columns. contain exclusively numerical values. can either matrix, data.frame, Matrix::Matrix() object. sp_com Site-species matrix sites rows species columns provided, function considers species equal abundance single site. can either matrix, data.frame, Matrix::Matrix() object. dist_matrix dissimilarity matrix can provided instead trait data.frame (default: NULL). can either matrix, data.frame, Matrix::Matrix() object.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_raoq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Rao's entropy index (Rao's Q) — fd_raoq","text":"data.frame two columns: site names sites row names input sp_com, Q values Rao's quadratic entropy site. sp_com argument provided sp_com rownames, arbitrary rownames s1, s2, s3, etc. used. NB: Rao's quadratic entropy 0 species site.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_raoq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Rao's entropy index (Rao's Q) — fd_raoq","text":"Pavoine S., Dolédec S. (2005). apportionment quadratic entropy: useful alternative partitioning diversity ecological data. Environmental Ecological Statistics, 12(2), 125–138. doi:10.1007/s10651-005-1037-2","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fd_raoq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Rao's entropy index (Rao's Q) — fd_raoq","text":"","code":"data(traits_birds) fd_raoq(traits_birds) #>   site        Q #> 1   s1 170.0519"},{"path":"https://funecology.github.io/fundiversity/reference/fundiversity-options.html","id":null,"dir":"Reference","previous_headings":"","what":"Options for fundiversity — fundiversity-options","title":"Options for fundiversity — fundiversity-options","text":"memoisation convex hull computation fundiversity controlled via fundiversity.memoise option: unset, default use memoisation memoise installed fundiversity loaded, use memoisation otherwise. options(fundiversity.memoise = TRUE), memoisation used error thrown memoise installed. options(fundiversity.memoise = FALSE), memoisation used.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/fundiversity-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fundiversity: Easy Computation of Functional Diversity Indices — fundiversity-package","title":"fundiversity: Easy Computation of Functional Diversity Indices — fundiversity-package","text":"Computes six functional diversity indices. namely, Functional Divergence (FDiv), Function Evenness (FEve), Functional Richness (FRic), Functional Richness intersections (FRic_intersect), Functional Dispersion (FDis), Rao's entropy (Q) (reviewed Villéger et al. 2008 doi:10.1890/07-1206.1 ). Provides efficient, modular, parallel functions compute functional diversity indices (Grenié & Gruson 2023 doi:10.1111/ecog.06585 ).","code":""},{"path":[]},{"path":"https://funecology.github.io/fundiversity/reference/fundiversity-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fundiversity: Easy Computation of Functional Diversity Indices — fundiversity-package","text":"Maintainer: Matthias Grenié matthias.grenie@gmail.com (ORCID) Authors: Hugo Gruson (ORCID)","code":""},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_birds.html","id":null,"dir":"Reference","previous_headings":"","what":"Site-species matrix of birds along a Tropical Gradient — site_sp_birds","title":"Site-species matrix of birds along a Tropical Gradient — site_sp_birds","text":"Presences absences birds different elevations along tropical gradient. Species names indicated column names.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_birds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Site-species matrix of birds along a Tropical Gradient — site_sp_birds","text":"","code":"site_sp_birds"},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_birds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Site-species matrix of birds along a Tropical Gradient — site_sp_birds","text":"matrix 217 columns (1 per species) 8 rows: elev_250 species present 250 m elevation? 0=, 1=Yes elev_500 species present 500 m elevation? 0=, 1=Yes elev_1000 species present 1000 m elevation? 0=, 1=Yes elev_1500 species present 1500 m elevation? 0=, 1=Yes elev_2000 species present 2000 m elevation? 0=, 1=Yes elev_2500 species present 2500 m elevation? 0=, 1=Yes elev_3000 species present 3000 m elevation? 0=, 1=Yes elev_3500 species present 3500 m elevation? 0=, 1=Yes","code":""},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_birds.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Site-species matrix of birds along a Tropical Gradient — site_sp_birds","text":"Nowak, Larissa et al. (2019), Data : Projecting consequences global warming functional diversity fleshy-fruited plants frugivorous birds along tropical elevational gradient, Dryad, Dataset, doi:10.5061/dryad.c0n737b","code":""},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_plants.html","id":null,"dir":"Reference","previous_headings":"","what":"Site-species matrix of plants along a Tropical Gradient — site_sp_plants","title":"Site-species matrix of plants along a Tropical Gradient — site_sp_plants","text":"Presences absences plants different elevations along tropical gradient. Species names indicated column names.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_plants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Site-species matrix of plants along a Tropical Gradient — site_sp_plants","text":"","code":"site_sp_plants"},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_plants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Site-species matrix of plants along a Tropical Gradient — site_sp_plants","text":"matrix 392 columns (1 per species) 10 rows: elev_250 species present 250 m elevation? 0=, 1=Yes elev_500 species present 500 m elevation? 0=, 1=Yes elev_1000 species present 1000 m elevation? 0=, 1=Yes elev_1500 species present 1500 m elevation? 0=, 1=Yes elev_2000 species present 2000 m elevation? 0=, 1=Yes elev_2500 species present 2500 m elevation? 0=, 1=Yes elev_3000 species present 3000 m elevation? 0=, 1=Yes elev_3500 species present 3500 m elevation? 0=, 1=Yes elev_3750 species present 3750 m elevation? 0=, 1=Yes elev_4000 species present 4000 m elevation? 0=, 1=Yes","code":""},{"path":"https://funecology.github.io/fundiversity/reference/site_sp_plants.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Site-species matrix of plants along a Tropical Gradient — site_sp_plants","text":"Nowak, Larissa et al. (2019), Data : Projecting consequences global warming functional diversity fleshy-fruited plants frugivorous birds along tropical elevational gradient, Dryad, Dataset, doi:10.5061/dryad.c0n737b","code":""},{"path":"https://funecology.github.io/fundiversity/reference/traits_birds.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Traits of Frugivorous Birds along a Tropical Gradient — traits_birds","title":"Functional Traits of Frugivorous Birds along a Tropical Gradient — traits_birds","text":"dataset containing functional traits frugivorous birds Manú biosphere reserve, southeast Peru. Given species mean trait values. row names dataset give species names. Morphological traits measured museum specimen following Eck et al.(2011). Traits measured adult , possible, minimum two female two male specimens. Body mass taken Dunning et al. (2007).","code":""},{"path":"https://funecology.github.io/fundiversity/reference/traits_birds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Traits of Frugivorous Birds along a Tropical Gradient — traits_birds","text":"","code":"traits_birds"},{"path":"https://funecology.github.io/fundiversity/reference/traits_birds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Functional Traits of Frugivorous Birds along a Tropical Gradient — traits_birds","text":"data frame 217 rows 4 variables: Bill.width..mm. bill width, mm Bill.length..mm. bill length, mm Kipp.s.index Kipp's index indicating wing Pointedness Bodymass..g. adult's bodymass, g","code":""},{"path":"https://funecology.github.io/fundiversity/reference/traits_birds.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Functional Traits of Frugivorous Birds along a Tropical Gradient — traits_birds","text":"Nowak, Larissa et al. (2019), Data : Projecting consequences global warming functional diversity fleshy-fruited plants frugivorous birds along tropical elevational gradient, Dryad, Dataset, doi:10.5061/dryad.c0n737b","code":""},{"path":"https://funecology.github.io/fundiversity/reference/traits_plants.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Traits of Fleshy-fruit plants along a Tropical Gradient — traits_plants","title":"Functional Traits of Fleshy-fruit plants along a Tropical Gradient — traits_plants","text":"Taxonomy functional traits 392 fleshy-fruited plant species Manu National Park south-east Peru. Given fruit length width (mm), plant height (m) crop mass (g). Fruit traits measured fresh fruit samples. Number fruits per plant (used determine crop mass) plant height estimated field. Species names indicated row names.","code":""},{"path":"https://funecology.github.io/fundiversity/reference/traits_plants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Traits of Fleshy-fruit plants along a Tropical Gradient — traits_plants","text":"","code":"traits_plants"},{"path":"https://funecology.github.io/fundiversity/reference/traits_plants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Functional Traits of Fleshy-fruit plants along a Tropical Gradient — traits_plants","text":"data frame 392 rows 4 variables: Fruit.length..mm. fruit length, mm Fruit.width..mm. fruit width, mm Plant.height..m. plant height, m Crop.mass..g. seed mass, g","code":""},{"path":"https://funecology.github.io/fundiversity/reference/traits_plants.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Functional Traits of Fleshy-fruit plants along a Tropical Gradient — traits_plants","text":"Nowak, Larissa et al. (2019), Data : Projecting consequences global warming functional diversity fleshy-fruited plants frugivorous birds along tropical elevational gradient, Dryad, Dataset, doi:10.5061/dryad.c0n737b","code":""},{"path":[]},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"minor-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"fundiversity 1.1.0","text":"Change vignette names indexing ordered similarly pkgdown website, CRAN, using vignette. Vignettes renamed fundiversity_X-topic.Rmd overview vignette fundiversity.Rmd. Fully replace URLs still pointing https://github.com/bisaloo/fundiversity https://github.com/funecology/fundiversity Update documentation fd_*() functions edge cases arguments. Fix unuseful argument remove_species_without_traits() display FALSE end message. Update parallel vignette list parallelizable function top explain vignette pre-computed. Update performance/benchmark vignette reflect actually ran benchmark manuscript.","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"fundiversity 1.1.0","text":"Fix bug computation fd_fdis() misplaced square. NB: FDis computation done day wrong.","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"fundiversity-100","dir":"Changelog","previous_headings":"","what":"fundiversity 1.0.0","title":"fundiversity 1.0.0","text":"CRAN release: 2022-08-25","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"internal-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"fundiversity 1.0.0","text":"Unit tests non-continuous traits functions. Correct URLs package","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"minor-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"fundiversity 1.0.0","text":"fundiversity functions now error used non-continuous trait data future_apply() future_lapply() calls fd_fdis(), fd_fdiv(), fd_ric(), fd_fric_intersect() fd_feve() now use future.globals = FALSE, thus making internal code less error-prone faster parallel settings.","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"fundiversity 1.0.0","text":"Add vignette numerical correctness named correctness, accessible vignette(\"correctness\", package = \"fundiversity\").","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"fundiversity-021","dir":"Changelog","previous_headings":"","what":"fundiversity 0.2.1","title":"fundiversity 0.2.1","text":"CRAN release: 2021-09-21","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"internal-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"fundiversity 0.2.1","text":"Unit tests updated work testthat 3.1.0","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"fundiversity-020","dir":"Changelog","previous_headings":"","what":"fundiversity 0.2.0","title":"fundiversity 0.2.0","text":"CRAN release: 2021-05-14","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"fundiversity 0.2.0","text":"new function fd_fric_intersect() compute intersection convex hulls across pairs sites. new function fd_fdis compute Functional Dispersion FDis. fd_fdiv(), fd_feve(), fd_fdis(), fd_fric() can now computed parallel future framework. Please refer parallelization vignette information. convex hull computation fd_fdiv(), fd_fric(), fd_fric_intersect() now cached thanks memoise package speed repeated runs. behavior can disabled running options(fundiversity.memoise = FALSE) start R session.","code":""},{"path":"https://funecology.github.io/fundiversity/news/index.html","id":"fundiversity-001","dir":"Changelog","previous_headings":"","what":"fundiversity 0.0.1","title":"fundiversity 0.0.1","text":"CRAN release: 2021-02-15 First CRAN release (01751f1) 🎉! Added NEWS.md file track changes package.","code":""}]
